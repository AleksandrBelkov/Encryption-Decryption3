type: edu
custom_name: stage5
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.common.FileUtils;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.io.IOException;
    import java.nio.charset.StandardCharsets;
    import java.nio.file.Files;
    import java.nio.file.NoSuchFileException;
    import java.nio.file.Path;
    import java.nio.file.Paths;
    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {
        public EncryptDecryptTest() {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-in", "in.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&")
                    .addFile("in.txt", "Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hello")
                    .addFile("input.txt", "Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-in", "i.txt",
                        "-out", "output.txt",
                        "-mode", "enc"
                    )
                    .setAttach("123456789")
                    .addFile("i.txt", "012345678"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-in", "input.txt",
                        "-out", "output.txt",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!")
                    .addFile("input.txt", "\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("Hi")
                    .addFile("input.txt", "Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-in", "input.txt",
                        "-out", "output.txt"
                    )
                    .setAttach("111122223333")
                    .addFile("input.txt", "222233334444")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            String fileName = "output.txt";
            String output;

            try {
                Path path = Paths.get(FileUtils.CURRENT_DIR + fileName);
                output = Files.readString(path, StandardCharsets.UTF_8);
            } catch (NoSuchFileException e) {
                return new CheckResult(false, "File output.txt not found!");
            } catch (IOException e) {
                return new CheckResult(false, "Cannot read from file!");
            }

            if (!output.trim().equals(clue.trim())) {
                return new CheckResult(false, "Wrong result in the file!");
            }

            return new CheckResult(true);
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: "package encryptdecrypt;\n//import java.util.Scanner;\n\npublic class Main\
    \ {\n    \n    private static String encrypt(String input, int key) {\n      \
    \  String result = \"\";\n\n        for (int i  = 0; i < input.length(); i++)\
    \ {\n            int newChar = (int) input.charAt(i) + key;\n            char\
    \ newChar2 = (char) newChar;\n            result += Character.toString(newChar2);\n\
    \        }\n        return result;\n    }\n    \n    private static String decrypt(String\
    \ input, int key) {\n        String result = \"\";\n\n        for (int i  = 0;\
    \ i < input.length(); i++) {\n            int newChar = (int) input.charAt(i)\
    \ - key;\n            char newChar2 = (char) newChar;\n            result += Character.toString(newChar2);\n\
    \        }\n        return result;\n    }\n    \n    public static void main(String[]\
    \ args) {\n        /*Scanner scanner = new Scanner(System.in);\n        String\
    \ action = scanner.nextLine();\n        String input = scanner.nextLine();\n \
    \       int key = scanner.nextInt();\n        scanner.close();*/\n\n        int\
    \  key = 0;\n        String mode = \"enc\";\n        String input =  \"\";\n\n\
    \        String output = \"\";\n\n        for (int i = 0; i < args.length; i++)\
    \ {\n            if (\"-key\".equals(args[i])) {\n                key = Integer.parseInt(args[i\
    \ + 1]); \n            }\n            if (\"-mode\".equals(args[i])) {\n     \
    \           mode = args[i+1];\n            }\n            if (\"-data\".equals(args[i]))\
    \ {\n                input = args[i + 1];\n            }\n        }\n\n\n    \
    \    \n        if (\"enc\".equals(mode)) {\n            output = encrypt(input,\
    \ key);\n        } else if (\"dec\".equals(mode)) {\n            output = decrypt(input,\
    \ key);\n        } else {\n            System.out.print(\"Wrong mode!\");\n  \
    \      }\n    \n        System.out.println(output);\n    }\n}\n"
  learner_created: false
- name: output.txt
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/46/stages/249/implement
status: Solved
record: 5
